/**
 * @TODO Add doc comment.
 */
@function color( $key ) {
  @if map-has-key( $colors, $key ) {
    @return map-get( $colors, $key );
  } @else {
    @error "Invalid color name: `#{$key}`.";
  }
}

/**
 * @TODO Add doc comment.
 */
@function strip-unit( $num ) {
  @return $num / ( $num * 0 + 1 );
}

/**
 * @TODO Add doc comment.
 */
@function convert-to-rem( $value, $base-value: 16 )  {
  $value: strip-unit( $value ) / strip-unit( $base-value ) * 1rem;

  @if ( $value == 0rem ) {
    $value: 0; // Turn 0rem into 0.
  }

  @return $value;
}

/**
 * @TODO Add doc comment.
 */
@function rem( $values, $base-value: 16 ) {
  $max: length( $values );

  @if $max == 1 {
    @return convert-to-rem( nth( $values, 1 ), $base-value );
  }

  $remValues: ();

  @for $i from 1 through $max {
    $remValues: append( $remValues, convert-to-rem( nth( $values, $i ), $base-value ) );
  }

  @return $remValues;
}
